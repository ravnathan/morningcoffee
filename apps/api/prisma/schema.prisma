// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  cashier
  admin
}

enum PaymentMethod {
  cash
  debit
}

enum Size {
  small
  medium
  large
}

enum Type {
  hot
  cold
}

enum Shift {
  start
  end
}

model User {
  id           String         @id @default(cuid())
  username     String         @unique
  fullname     String
  password     String
  role         Role
  avatar       String?
  created_at   DateTime       @default(now())
  updated_at   DateTime       @default(now())
  Transaction  Transaction[]
  CashierShift CashierShift[]
}

model Category {
  id               String    @id @default(cuid())
  name             String    @unique
  image            String
  hot_iced_variant Boolean   @default(false)
  cold_only        Boolean   @default(false)
  size_small       Boolean   @default(false)
  size_medium      Boolean   @default(true)
  size_large       Boolean   @default(false)
  is_deleted       Boolean   @default(false)
  created_at       DateTime  @default(now())
  updated_at       DateTime  @default(now())
  Product          Product[]
}

model Product {
  id                String  @id @default(cuid())
  name              String  @unique
  category_name     String
  price_medium      Int?
  price_iced_small  Int?
  price_iced_medium Int?
  price_iced_large  Int?
  image_iced        String?
  image_hot         String
  stock             Int
  stock_iced        Int?
  description       String  @db.Text
  description_iced  String? @db.Text
  is_deleted        Boolean @default(false)

  created_at      DateTime          @default(now())
  uodated_at      DateTime          @default(now())
  category        Category          @relation(fields: [category_name], references: [name])
  TransactionItem TransactionItem[]
}

model Transaction {
  id               String            @id @default(cuid())
  total_price      Float
  cashier_on_duty  String
  transaction_date DateTime          @default(now())
  updated_at       DateTime          @default(now())
  TransactionItem  TransactionItem[]
  user             User              @relation(fields: [cashier_on_duty], references: [id])
}

model TransactionItem {
  id             String      @id @default(cuid())
  transaction_id String
  product_id     String
  qty            Int
  price          Float
  transaction    Transaction @relation(fields: [transaction_id], references: [id])
  product        Product     @relation(fields: [product_id], references: [id])
}

model CashierShift {
  id      String @id @default(cuid())
  user_id String
  shift   Shift
  value   Float
  user    User   @relation(fields: [user_id], references: [id])
}
